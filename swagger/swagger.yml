swagger: "2.0"
info:
  title: Medicina
  description: Api para Medicina dentro del módulo de Salud del proyecto SIBUD
  version: "1.0"
  termsOfService: http://www.udistrital.edu.co/politicas-de-privacidad.pdf
  contact:
    email: baluist@correo.udistrital.edu.co
  license:
    name: BSD-3-Clause
    url: http://opensource.org/licenses/BSD-3-Clause
basePath: /Medicina
paths:
  /Antecedente/:
    get:
      tags:
      - Antecedente
      description: consulta todos los registros de la tabla Antecedente
      operationId: AntecedenteController.Get All
      parameters:
      - in: query
        name: query
        description: 'Filtro. Por ejemplo, col1: v1, col2: v2 ...'
        type: string
      - in: query
        name: fields
        description: Campos devueltos. Por ejemplo, col1, col2 ...
        type: string
      - in: query
        name: sortby
        description: Campos ordenados por. Por ejemplo, Col1, col2 ...
        type: string
      - in: query
        name: order
        description: El orden correspondiente a cada campo de clasificación, si es un valor único, se aplica a todos los campos de clasificación. Por ejemplo, desc, asc ...
        type: string
      - in: query
        name: limit
        description: Limite el tamaño del conjunto de resultados. Debe ser un número entero
        type: string
      - in: query
        name: offset
        description: Posición inicial del conjunto de resultados. Debe ser un número entero
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Antecedente'
        "403":
          description: ""
    post:
      tags:
      - Antecedente
      description: agregar un registro en la tabla Antecedente
      operationId: AntecedenteController.Post
      parameters:
      - in: body
        name: body
        description: Cuerpo para el contenido de Antecedente
        required: true
        schema:
          $ref: '#/definitions/models.Antecedente'
      responses:
        "201":
          description: '{int} models.Antecedente'
        "403":
          description: Cuerpo Vacío
  /Antecedente/{id}:
    get:
      tags:
      - Antecedente
      description: consultar un registro de la tabla Antecedente por su id
      operationId: AntecedenteController.Get One
      parameters:
      - in: path
        name: id
        description: Id a consultar
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Antecedente'
        "403":
          description: :id  está vacío
    put:
      tags:
      - Antecedente
      description: actualizar un registro de la tabla Antecedente
      operationId: AntecedenteController.Put
      parameters:
      - in: path
        name: id
        description: Id del registro a actualizar
        required: true
        type: string
      - in: body
        name: body
        description: Cuerpo para el contenido de Antecedente
        required: true
        schema:
          $ref: '#/definitions/models.Antecedente'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Antecedente'
        "403":
          description: :id no es entero
    delete:
      tags:
      - Antecedente
      description: elimina un registro de la tabla Antecedente
      operationId: AntecedenteController.Delete
      parameters:
      - in: path
        name: id
        description: Id del registro a eliminar
        required: true
        type: string
      responses:
        "200":
          description: '{string} borrado exitoso!'
        "403":
          description: Id vacío
  /ConsultaFisioterapia/:
    get:
      tags:
      - ConsultaFisioterapia
      description: consulta todos los registros de la tabla ConsultaFisioterapia
      operationId: ConsultaFisioterapiaController.Get All
      parameters:
      - in: query
        name: query
        description: 'Filtro. Por ejemplo, col1: v1, col2: v2 ...'
        type: string
      - in: query
        name: fields
        description: Campos devueltos. Por ejemplo, col1, col2 ...
        type: string
      - in: query
        name: sortby
        description: Campos ordenados por. Por ejemplo, Col1, col2 ...
        type: string
      - in: query
        name: order
        description: El orden correspondiente a cada campo de clasificación, si es un valor único, se aplica a todos los campos de clasificación. Por ejemplo, desc, asc ...
        type: string
      - in: query
        name: limit
        description: Limite el tamaño del conjunto de resultados. Debe ser un número entero
        type: string
      - in: query
        name: offset
        description: Posición inicial del conjunto de resultados. Debe ser un número entero
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ConsultaFisioterapia'
        "403":
          description: ""
    post:
      tags:
      - ConsultaFisioterapia
      description: agregar un registro en la tabla ConsultaFisioterapia
      operationId: ConsultaFisioterapiaController.Post
      parameters:
      - in: body
        name: body
        description: Cuerpo para el contenido de ConsultaFisioterapia
        required: true
        schema:
          $ref: '#/definitions/models.ConsultaFisioterapia'
      responses:
        "201":
          description: '{int} models.ConsultaFisioterapia'
        "403":
          description: Cuerpo Vacío
  /ConsultaFisioterapia/{id}:
    get:
      tags:
      - ConsultaFisioterapia
      description: consultar un registro de la tabla ConsultaFisioterapia por su id
      operationId: ConsultaFisioterapiaController.Get One
      parameters:
      - in: path
        name: id
        description: Id a consultar
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ConsultaFisioterapia'
        "403":
          description: :id está vacío
    put:
      tags:
      - ConsultaFisioterapia
      description: actualizar un registro de la tabla ConsultaFisioterapia
      operationId: ConsultaFisioterapiaController.Put
      parameters:
      - in: path
        name: id
        description: Id del registro a actualizar
        required: true
        type: string
      - in: body
        name: body
        description: Cuerpo para el contenido de ConsultaFisioterapia
        required: true
        schema:
          $ref: '#/definitions/models.ConsultaFisioterapia'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ConsultaFisioterapia'
        "403":
          description: :id no es entero
    delete:
      tags:
      - ConsultaFisioterapia
      description: elimina un registro de la tabla ConsultaFisioterapia
      operationId: ConsultaFisioterapiaController.Delete
      parameters:
      - in: path
        name: id
        description: Id del registro a eliminar
        required: true
        type: string
      responses:
        "200":
          description: '{string} borrado exitoso!'
        "403":
          description: Id vacío
  /Diagnostico/:
    get:
      tags:
      - Diagnostico
      description: consulta todos los registros de la tabla Diagnostico
      operationId: DiagnosticoController.Get All
      parameters:
      - in: query
        name: query
        description: 'Filtro. Por ejemplo, col1: v1, col2: v2 ...'
        type: string
      - in: query
        name: fields
        description: Campos devueltos. Por ejemplo, col1, col2 ...
        type: string
      - in: query
        name: sortby
        description: Campos ordenados por. Por ejemplo, Col1, col2 ...
        type: string
      - in: query
        name: order
        description: El orden correspondiente a cada campo de clasificación, si es un valor único, se aplica a todos los campos de clasificación. Por ejemplo, desc, asc ...
        type: string
      - in: query
        name: limit
        description: Limite el tamaño del conjunto de resultados. Debe ser un número entero
        type: string
      - in: query
        name: offset
        description: Posición inicial del conjunto de resultados. Debe ser un número entero
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Diagnostico'
        "403":
          description: ""
    post:
      tags:
      - Diagnostico
      description: agregar un registro en la tabla Diagnostico
      operationId: DiagnosticoController.Post
      parameters:
      - in: body
        name: body
        description: Cuerpo para el contenido de ConsultaFisioterapia
        required: true
        schema:
          $ref: '#/definitions/models.Diagnostico'
      responses:
        "201":
          description: '{int} models.Diagnostico'
        "403":
          description: Cuerpo Vacío
  /Diagnostico/{id}:
    get:
      tags:
      - Diagnostico
      description: consultar un registro de la tabla Diagnostico por su id
      operationId: DiagnosticoController.Get One
      parameters:
      - in: path
        name: id
        description: Id a consultar
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Diagnostico'
        "403":
          description: :id está vacío
    put:
      tags:
      - Diagnostico
      description: actualizar un registro de la tabla Diagnostico
      operationId: DiagnosticoController.Put
      parameters:
      - in: path
        name: id
        description: Id del registro a actualizar
        required: true
        type: string
      - in: body
        name: body
        description: Cuerpo para el contenido de ConsultaFisioterapia
        required: true
        schema:
          $ref: '#/definitions/models.Diagnostico'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Diagnostico'
        "403":
          description: :id no es entero
    delete:
      tags:
      - Diagnostico
      description: elimina un registro de la tabla Diagnostico
      operationId: DiagnosticoController.Delete
      parameters:
      - in: path
        name: id
        description: Id del registro a eliminar
        required: true
        type: string
      responses:
        "200":
          description: '{string} borrado exitoso!'
        "403":
          description: Id vacío
  /Examen/:
    get:
      tags:
      - Examen
      description: consulta todos los registros de la tabla Examen
      operationId: ExamenController.Get All
      parameters:
      - in: query
        name: query
        description: 'Filtro. Por ejemplo, col1: v1, col2: v2 ...'
        type: string
      - in: query
        name: fields
        description: Campos devueltos. Por ejemplo, col1, col2 ...
        type: string
      - in: query
        name: sortby
        description: Campos ordenados por. Por ejemplo, Col1, col2 ...
        type: string
      - in: query
        name: order
        description: El orden correspondiente a cada campo de clasificación, si es un valor único, se aplica a todos los campos de clasificación. Por ejemplo, desc, asc ...
        type: string
      - in: query
        name: limit
        description: Limite el tamaño del conjunto de resultados. Debe ser un número entero
        type: string
      - in: query
        name: offset
        description: Posición inicial del conjunto de resultados. Debe ser un número entero
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Examen'
        "403":
          description: ""
    post:
      tags:
      - Examen
      description: agregar un registro en la tabla Examen
      operationId: ExamenController.Post
      parameters:
      - in: body
        name: body
        description: Cuerpo para el contenido de ConsultaFisioterapia
        required: true
        schema:
          $ref: '#/definitions/models.Examen'
      responses:
        "201":
          description: '{int} models.Examen'
        "403":
          description: Cuerpo Vacío
  /Examen/{id}:
    get:
      tags:
      - Examen
      description: consultar un registro de la tabla Examen por su id
      operationId: ExamenController.Get One
      parameters:
      - in: path
        name: id
        description: Id a consultar
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Examen'
        "403":
          description: :id está vacío
    put:
      tags:
      - Examen
      description: actualizar un registro de la tabla Examen
      operationId: ExamenController.Put
      parameters:
      - in: path
        name: id
        description: Id del registro a actualizar
        required: true
        type: string
      - in: body
        name: body
        description: Cuerpo para el contenido de ConsultaFisioterapia
        required: true
        schema:
          $ref: '#/definitions/models.Examen'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Examen'
        "403":
          description: :id no es entero
    delete:
      tags:
      - Examen
      description: elimina un registro de la tabla Examen
      operationId: ExamenController.Delete
      parameters:
      - in: path
        name: id
        description: Id del registro a eliminar
        required: true
        type: string
      responses:
        "200":
          description: '{string} borrado exitoso!'
        "403":
          description: Id vacío
  /HistoriaClinica/:
    get:
      tags:
      - HistoriaClinica
      description: consulta todos los registros de la tabla HistoriaClinica
      operationId: HistoriaClinicaController.Get All
      parameters:
      - in: query
        name: query
        description: 'Filtro. Por ejemplo, col1: v1, col2: v2 ...'
        type: string
      - in: query
        name: fields
        description: Campos devueltos. Por ejemplo, col1, col2 ...
        type: string
      - in: query
        name: sortby
        description: Campos ordenados por. Por ejemplo, Col1, col2 ...
        type: string
      - in: query
        name: order
        description: El orden correspondiente a cada campo de clasificación, si es un valor único, se aplica a todos los campos de clasificación. Por ejemplo, desc, asc ...
        type: string
      - in: query
        name: limit
        description: Limite el tamaño del conjunto de resultados. Debe ser un número entero
        type: string
      - in: query
        name: offset
        description: Posición inicial del conjunto de resultados. Debe ser un número entero
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.HistoriaClinica'
        "403":
          description: ""
    post:
      tags:
      - HistoriaClinica
      description: agregar un registro en la tabla HistoriaClinica
      operationId: HistoriaClinicaController.Post
      parameters:
      - in: body
        name: body
        description: Cuerpo para el contenido de ConsultaFisioterapia
        required: true
        schema:
          $ref: '#/definitions/models.HistoriaClinica'
      responses:
        "201":
          description: '{int} models.HistoriaClinica'
        "403":
          description: Cuerpo Vacío
  /HistoriaClinica/{id}:
    get:
      tags:
      - HistoriaClinica
      description: consultar un registro de la tabla HistoriaClinica por su id
      operationId: HistoriaClinicaController.Get One
      parameters:
      - in: path
        name: id
        description: Id a consultar
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.HistoriaClinica'
        "403":
          description: :id está vacío
    put:
      tags:
      - HistoriaClinica
      description: actualizar un registro de la tabla HistoriaClinica
      operationId: HistoriaClinicaController.Put
      parameters:
      - in: path
        name: id
        description: Id del registro a actualizar
        required: true
        type: string
      - in: body
        name: body
        description: Cuerpo para el contenido de ConsultaFisioterapia
        required: true
        schema:
          $ref: '#/definitions/models.HistoriaClinica'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.HistoriaClinica'
        "403":
          description: :id no es entero
    delete:
      tags:
      - HistoriaClinica
      description: elimina un registro de la tabla HistoriaClinica
      operationId: HistoriaClinicaController.Delete
      parameters:
      - in: path
        name: id
        description: Id del registro a eliminar
        required: true
        type: string
      responses:
        "200":
          description: '{string} borrado exitoso!'
        "403":
          description: Id vacío
  /HojaHistoria/:
    get:
      tags:
      - HojaHistoria
      description: consulta todos los registros de la tabla HojaHistoria
      operationId: HojaHistoriaController.Get All
      parameters:
      - in: query
        name: query
        description: 'Filtro. Por ejemplo, col1: v1, col2: v2 ...'
        type: string
      - in: query
        name: fields
        description: Campos devueltos. Por ejemplo, col1, col2 ...
        type: string
      - in: query
        name: sortby
        description: Campos ordenados por. Por ejemplo, Col1, col2 ...
        type: string
      - in: query
        name: order
        description: El orden correspondiente a cada campo de clasificación, si es un valor único, se aplica a todos los campos de clasificación. Por ejemplo, desc, asc ...
        type: string
      - in: query
        name: limit
        description: Limite el tamaño del conjunto de resultados. Debe ser un número entero
        type: string
      - in: query
        name: offset
        description: Posición inicial del conjunto de resultados. Debe ser un número entero
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.HojaHistoria'
        "403":
          description: ""
    post:
      tags:
      - HojaHistoria
      description: agregar un registro en la tabla HojaHistoria
      operationId: HojaHistoriaController.Post
      parameters:
      - in: body
        name: body
        description: Cuerpo para el contenido de queryFisioterapia
        required: true
        schema:
          $ref: '#/definitions/models.HojaHistoria'
      responses:
        "201":
          description: '{int} models.HojaHistoria'
        "403":
          description: Cuerpo Vacío
  /HojaHistoria/{id}:
    get:
      tags:
      - HojaHistoria
      description: queryr un registro de la tabla HojaHistoria por su id
      operationId: HojaHistoriaController.Get One
      parameters:
      - in: path
        name: id
        description: Id a queryr
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.HojaHistoria'
        "403":
          description: :id está vacío
    put:
      tags:
      - HojaHistoria
      description: actualizar un registro de la tabla HojaHistoria
      operationId: HojaHistoriaController.Put
      parameters:
      - in: path
        name: id
        description: Id del registro a actualizar
        required: true
        type: string
      - in: body
        name: body
        description: Cuerpo para el contenido de queryFisioterapia
        required: true
        schema:
          $ref: '#/definitions/models.HojaHistoria'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.HojaHistoria'
        "403":
          description: :id no es entero
    delete:
      tags:
      - HojaHistoria
      description: elimina un registro de la tabla HojaHistoria
      operationId: HojaHistoriaController.Delete
      parameters:
      - in: path
        name: id
        description: Id del registro a eliminar
        required: true
        type: string
      responses:
        "200":
          description: '{string} borrado exitoso!'
        "403":
          description: Id vacío
  /Sistema/:
    get:
      tags:
      - Sistema
      description: consulta todos los registros de la tabla Sistema
      operationId: SistemaController.Get All
      parameters:
      - in: query
        name: query
        description: 'Filtro. Por ejemplo, col1: v1, col2: v2 ...'
        type: string
      - in: query
        name: fields
        description: Campos devueltos. Por ejemplo, col1, col2 ...
        type: string
      - in: query
        name: sortby
        description: Campos ordenados por. Por ejemplo, Col1, col2 ...
        type: string
      - in: query
        name: order
        description: El orden correspondiente a cada campo de clasificación, si es un valor único, se aplica a todos los campos de clasificación. Por ejemplo, desc, asc ...
        type: string
      - in: query
        name: limit
        description: Limite el tamaño del conjunto de resultados. Debe ser un número entero
        type: string
      - in: query
        name: offset
        description: Posición inicial del conjunto de resultados. Debe ser un número entero
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Sistema'
        "403":
          description: ""
    post:
      tags:
      - Sistema
      description: agregar un registro en la tabla Sistema
      operationId: SistemaController.Post
      parameters:
      - in: body
        name: body
        description: Cuerpo para el contenido de Sistema
        required: true
        schema:
          $ref: '#/definitions/models.Sistema'
      responses:
        "201":
          description: '{int} models.Sistema'
        "403":
          description: Cuerpo Vacío
  /Sistema/{id}:
    get:
      tags:
      - Sistema
      description: consultar un registro de la tabla Sistema por su id
      operationId: SistemaController.Get One
      parameters:
      - in: path
        name: id
        description: Id a consultar
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Sistema'
        "403":
          description: :id está vacío
    put:
      tags:
      - Sistema
      description: actualizar un registro de la tabla Sistema
      operationId: SistemaController.Put
      parameters:
      - in: path
        name: id
        description: Id del registro a actualizar
        required: true
        type: string
      - in: body
        name: body
        description: Cuerpo para el contenido de Sistema
        required: true
        schema:
          $ref: '#/definitions/models.Sistema'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Sistema'
        "403":
          description: :id no es entero
    delete:
      tags:
      - Sistema
      description: elimina un registro de la tabla Sistema
      operationId: SistemaController.Delete
      parameters:
      - in: path
        name: id
        description: Id del registro a eliminar
        required: true
        type: string
      responses:
        "200":
          description: '{string} borrado exitoso!'
        "403":
          description: Id vacío
  /TipoAntecedente/:
    get:
      tags:
      - TipoAntecedente
      description: consulta todos los registros de la tabla TipoAntecedente
      operationId: TipoAntecedenteController.Get All
      parameters:
      - in: query
        name: query
        description: 'Filtro. Por ejemplo, col1: v1, col2: v2 ...'
        type: string
      - in: query
        name: fields
        description: Campos devueltos. Por ejemplo, col1, col2 ...
        type: string
      - in: query
        name: sortby
        description: Campos ordenados por. Por ejemplo, Col1, col2 ...
        type: string
      - in: query
        name: order
        description: El orden correspondiente a cada campo de clasificación, si es un valor único, se aplica a todos los campos de clasificación. Por ejemplo, desc, asc ...
        type: string
      - in: query
        name: limit
        description: Limite el tamaño del conjunto de resultados. Debe ser un número entero
        type: string
      - in: query
        name: offset
        description: Posición inicial del conjunto de resultados. Debe ser un número entero
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoAntecedente'
        "403":
          description: ""
    post:
      tags:
      - TipoAntecedente
      description: agregar un registro en la tabla TipoAntecedente
      operationId: TipoAntecedenteController.Post
      parameters:
      - in: body
        name: body
        description: Cuerpo para el contenido de TipoAntecedente
        required: true
        schema:
          $ref: '#/definitions/models.TipoAntecedente'
      responses:
        "201":
          description: '{int} models.TipoAntecedente'
        "403":
          description: Cuerpo Vacío
  /TipoAntecedente/{id}:
    get:
      tags:
      - TipoAntecedente
      description: consultar un registro de la tabla TipoAntecedente por su id
      operationId: TipoAntecedenteController.Get One
      parameters:
      - in: path
        name: id
        description: Id a consultar
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoAntecedente'
        "403":
          description: :id está vacío
    put:
      tags:
      - TipoAntecedente
      description: actualizar un registro de la tabla TipoAntecedente
      operationId: TipoAntecedenteController.Put
      parameters:
      - in: path
        name: id
        description: Id del registro a actualizar
        required: true
        type: string
      - in: body
        name: body
        description: Cuerpo para el contenido de TipoAntecedente
        required: true
        schema:
          $ref: '#/definitions/models.TipoAntecedente'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoAntecedente'
        "403":
          description: :id no es entero
    delete:
      tags:
      - TipoAntecedente
      description: elimina un registro de la tabla TipoAntecedente
      operationId: TipoAntecedenteController.Delete
      parameters:
      - in: path
        name: id
        description: Id del registro a eliminar
        required: true
        type: string
      responses:
        "200":
          description: '{string} borrado exitoso!'
        "403":
          description: Id vacío
  /TipoExamen/:
    get:
      tags:
      - TipoExamen
      description: consulta todos los registros de la tabla TipoExamen
      operationId: TipoExamenController.Get All
      parameters:
      - in: consulta
        name: query
        description: 'Filtro. Por ejemplo, col1: v1, col2: v2 ...'
        type: string
      - in: consulta
        name: fields
        description: Campos devueltos. Por ejemplo, col1, col2 ...
        type: string
      - in: consulta
        name: sortby
        description: Campos ordenados por. Por ejemplo, Col1, col2 ...
        type: string
      - in: consulta
        name: order
        description: El orden correspondiente a cada campo de clasificación, si es un valor único, se aplica a todos los campos de clasificación. Por ejemplo, desc, asc ...
        type: string
      - in: consulta
        name: limit
        description: Limite el tamaño del conjunto de resultados. Debe ser un número entero
        type: string
      - in: consulta
        name: offset
        description: Posición inicial del conjunto de resultados. Debe ser un número entero
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoExamen'
        "403":
          description: ""
    post:
      tags:
      - TipoExamen
      description: agregar un registro en la tabla TipoExamen
      operationId: TipoExamenController.Post
      parameters:
      - in: body
        name: body
        description: Cuerpo para el contenido de TipoExamen
        required: true
        schema:
          $ref: '#/definitions/models.TipoExamen'
      responses:
        "201":
          description: '{int} models.TipoExamen'
        "403":
          description: Cuerpo Vacío
  /TipoExamen/{id}:
    get:
      tags:
      - TipoExamen
      description: consultar un registro de la tabla TipoExamen por su id
      operationId: TipoExamenController.Get One
      parameters:
      - in: path
        name: id
        description: Id a consultar
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoExamen'
        "403":
          description: :id está vacío
    put:
      tags:
      - TipoExamen
      description: actualizar un registro de la tabla TipoExamen
      operationId: TipoExamenController.Put
      parameters:
      - in: path
        name: id
        description: Id del registro a actualizar
        required: true
        type: string
      - in: body
        name: body
        description: Cuerpo para el contenido de TipoExamen
        required: true
        schema:
          $ref: '#/definitions/models.TipoExamen'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoExamen'
        "403":
          description: :id no es entero
    delete:
      tags:
      - TipoExamen
      description: elimina un registro de la tabla TipoExamen
      operationId: TipoExamenController.Delete
      parameters:
      - in: path
        name: id
        description: Id del registro a eliminar
        required: true
        type: string
      responses:
        "200":
          description: '{string} borrado exitoso!'
        "403":
          description: Id vacío
  /TipoSistema/:
    get:
      tags:
      - TipoSistema
      description: consulta todos los registros de la tabla TipoSistema
      operationId: TipoSistemaController.Get All
      parameters:
      - in: query
        name: query
        description: 'Filtro. Por ejemplo, col1: v1, col2: v2 ...'
        type: string
      - in: query
        name: fields
        description: Campos devueltos. Por ejemplo, col1, col2 ...
        type: string
      - in: query
        name: sortby
        description: Campos ordenados por. Por ejemplo, Col1, col2 ...
        type: string
      - in: query
        name: order
        description: El orden correspondiente a cada campo de clasificación, si es un valor único, se aplica a todos los campos de clasificación. Por ejemplo, desc, asc ...
        type: string
      - in: query
        name: limit
        description: Limite el tamaño del conjunto de resultados. Debe ser un número entero
        type: string
      - in: query
        name: offset
        description: Posición inicial del conjunto de resultados. Debe ser un número entero
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoSistema'
        "403":
          description: ""
    post:
      tags:
      - TipoSistema
      description: agregar un registro en la tabla TipoSistema
      operationId: TipoSistemaController.Post
      parameters:
      - in: body
        name: body
        description: Cuerpo para el contenido de TipoSistema
        required: true
        schema:
          $ref: '#/definitions/models.TipoSistema'
      responses:
        "201":
          description: '{int} models.TipoSistema'
        "403":
          description: Cuerpo Vacío
  /TipoSistema/{id}:
    get:
      tags:
      - TipoSistema
      description: consultar un registro de la tabla TipoSistema por su id
      operationId: TipoSistemaController.Get One
      parameters:
      - in: path
        name: id
        description: Id a consultar
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoSistema'
        "403":
          description: :id está vacío
    put:
      tags:
      - TipoSistema
      description: actualizar un registro de la tabla TipoSistema
      operationId: TipoSistemaController.Put
      parameters:
      - in: path
        name: id
        description: Id del registro a actualizar
        required: true
        type: string
      - in: body
        name: body
        description: Cuerpo para el contenido de TipoSistema
        required: true
        schema:
          $ref: '#/definitions/models.TipoSistema'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoSistema'
        "403":
          description: :id no es entero
    delete:
      tags:
      - TipoSistema
      description: elimina un registro de la tabla TipoSistema
      operationId: TipoSistemaController.Delete
      parameters:
      - in: path
        name: id
        description: Id del registro a eliminar
        required: true
        type: string
      responses:
        "200":
          description: '{string} borrado exitoso!'
        "403":
          description: Id vacío
definitions:
  models.Antecedente:
    title: Antecedente
    type: object
    properties:
      HistoriaClinica:
        $ref: '#/definitions/models.HistoriaClinica'
      Id:
        type: integer
        format: int64
      Observaciones:
        type: string
      TipoAntecedente:
        $ref: '#/definitions/models.TipoAntecedente'
  models.ConsultaFisioterapia:
    title: ConsultaFisioterapia
    type: object
    properties:
      Evolucion:
        type: string
      HistoriaClinica:
        $ref: '#/definitions/models.HistoriaClinica'
      HojaHistoria:
        $ref: '#/definitions/models.HojaHistoria'
      Id:
        type: integer
        format: int64
      MotivoConsulta:
        type: string
      Observaciones:
        type: string
      PlanManejo:
        type: string
      Valoracion:
        type: string
  models.Diagnostico:
    title: Diagnostico
    type: object
    properties:
      Activo:
        type: boolean
      Analisis:
        type: string
      Descripcion:
        type: string
      FechaCreacion:
        type: string
        format: datetime
      FechaModificacion:
        type: string
        format: datetime
      HistoriaClinica:
        $ref: '#/definitions/models.HistoriaClinica'
      HojaHistoria:
        $ref: '#/definitions/models.HojaHistoria'
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      PlanDeManejo:
        type: string
  models.Examen:
    title: Examen
    type: object
    properties:
      FechaExamen:
        type: string
        format: datetime
      HistoriaClinica:
        $ref: '#/definitions/models.HistoriaClinica'
      HojaHistoria:
        $ref: '#/definitions/models.HojaHistoria'
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      Observacion:
        type: string
      TipoExamen:
        $ref: '#/definitions/models.TipoExamen'
  models.HistoriaClinica:
    title: HistoriaClinica
    type: object
    properties:
      Id:
        type: integer
        format: int64
      Tercero:
        type: integer
        format: int64
  models.HojaHistoria:
    title: HojaHistoria
    type: object
    properties:
      Diagnostico:
        $ref: '#/definitions/models.Diagnostico'
      Especialidad:
        type: integer
        format: int64
      Evolucion:
        type: string
      FechaConsulta:
        type: string
        format: datetime
      HistoriaClinica:
        $ref: '#/definitions/models.HistoriaClinica'
      Id:
        type: integer
        format: int64
      Motivo:
        type: string
      Observacion:
        type: string
      Persona:
        type: number
        format: double
      Profesional:
        type: number
        format: double
  models.Sistema:
    title: Sistema
    type: object
    properties:
      HistoriaClinica:
        $ref: '#/definitions/models.HistoriaClinica'
      HojaHistoria:
        $ref: '#/definitions/models.HojaHistoria'
      Id:
        type: integer
        format: int64
      Observacion:
        type: string
      TipoSistema:
        $ref: '#/definitions/models.TipoSistema'
  models.TipoAntecedente:
    title: TipoAntecedente
    type: object
    properties:
      Activo:
        type: boolean
      Descripcion:
        type: string
      FechaCreacion:
        type: string
        format: datetime
      FechaModificacion:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
  models.TipoExamen:
    title: TipoExamen
    type: object
    properties:
      Activo:
        type: boolean
      FechaModificacion:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
  models.TipoSistema:
    title: TipoSistema
    type: object
    properties:
      Activo:
        type: boolean
      FechaModificacion:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
